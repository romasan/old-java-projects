import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URL;
/*import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Properties;*/

import com.bigfatgun.fixjures.Fixjure;
import com.bigfatgun.fixjures.json.JSONSource;



public class one_query {
	public static int rpp = 3; // max records in one session

	/**
	 * @param args
	 * @throws IOException 
	 * @throws UnsupportedEncodingException 
	 * @throws ParseException 
	 */
	public static void search(String query) throws UnsupportedEncodingException, IOException {
		try {
			System.out.print("Start search for: \"" + query + "\"\n");
			// TODO проверка было ли уже такое слово
			
			URL url = new URL("http://search.twitter.com/search.json?rpp=" + rpp + "&q=" + query);
			BufferedReader reader = null;

			String callback = new String();
			
			try {
			    reader = new BufferedReader(new InputStreamReader(url.openStream(), "UTF-8"));

			    for (String line; (line = reader.readLine()) != null;) {
			    	callback += line;
			    }
			    System.out.println("\n**************RAW*************************************\n"
			    		+ callback 
			    		+ "\n************END*RAW***********************************\n");
			
			    tweetData qtweetData = Fixjure.of(tweetData.class).from(JSONSource.newJsonString(callback)).create();
			    // TODO вывод ошибок поиска

			    String results_str = qtweetData.getResults();
			    
			    return;
			    
			    /*results_str = results_str.replace("},{", "}01g4pk3y01{");
			    results_str = results_str.replace(",\"metadata\":{\"result_type\":\"recent\"}", "");
			    results_str = results_str.replace("\"geo\":null,", "");
			    results_str = results_str.replace("\"to_user_name\":null,", "");
			    results_str = results_str.replace("\"to_user\":null,", "");
			    String[] tmp = results_str.split("01g4pk3y01");
			    
			    tmp[0] = tmp[0].substring(1, tmp[0].length());
			    tmp[tmp.length - 1] = tmp[tmp.length - 1].substring(0, tmp[tmp.length - 1].length() - 1);
			    int i = 0;
			    for(; i < tmp.length ; i++) {
			    	tweetDetails qtweetDetails = Fixjure.of(tweetDetails.class).from(JSONSource.newJsonString(tmp[i])).create();
			    	String id = qtweetDetails.getId();
			    	String text = qtweetDetails.getText();
			    	String from_user_id = qtweetDetails.getFrom_user_id();
			    	String from_user = qtweetDetails.getFrom_user();
			    	String iso_language_code = qtweetDetails.getIso_language_code();
			    	String created_at = qtweetDetails.getCreated_at();
			    
			    	//tmp[i]= results_str.replace("},{", "}01g4pk3y01{");
			    	
			    	// TODO record into DB
			     	// System.out.println("Text: " + text);
			     	
			    }	System.out.println("Found: " + i + " (max: " + rpp + ")");*/
			     	
//----------------------MYSQL-----------------------------------------------
/*			     	Connection             conn  = null;        
			        PreparedStatement   pstmt = null;
			        ResultSet            rs    = null;
			        
			        try {
			                        
			             
			            Properties connInfo = new Properties();
			            
			            connInfo.put("characterEncoding","UTF8");
			            connInfo.put("user", "root");
			            connInfo.put("password", "usbw");
			            
			            conn  = DriverManager.getConnection("jdbc:mysql://localhost:3307/?", connInfo);
			            
			            pstmt = conn.prepareStatement("show databases;");
			            
			            if(pstmt.execute()) {
			                rs = pstmt.getResultSet();                                
			                
			                while (rs.next()) {
			                    //System.out.println(rs.getString(1));
			                    System.out.println(rs.getString("Database"));
			                }
			            }                                    
			        }
			        catch (SQLException ex) {            
			            System.out.println(ex.toString());
			            //ex.printStackTrace();
			        }
			        finally {
			            
			            try {
			                
			                if (pstmt != null)
			                    pstmt.close();
			                
			                if (conn != null)
			                    conn.close();                
			            }
			            catch (SQLException ex) {            
			                System.out.println("On close: " + ex.toString());
			                //ex.printStackTrace();
			            }                        
			            
			        }        
*/
//--------------------MYSQL-END---------------------------------------------
			    
			} finally {
			    if (reader != null) try { reader.close(); } catch (IOException ignore) {}
			}
			
		} catch(ArrayIndexOutOfBoundsException e) {
			System.out.print("(.)(.)");
		}
	}
}
