package com.example.weryu;

import java.util.ArrayList;
import java.util.Iterator;

import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;

public class MainActivity extends MapActivity {

    private static final Intent MY_ALERT = null;

	@Override
    public void onCreate(Bundle savedInstanceData) {
        super.onCreate(savedInstanceData);
        setContentView(R.layout.activity_main);
        

        
        //MapView mapView = (MapView) findViewById(R.id.mapview);
        
        /*final MapView mMapView = (MapView) findViewById(R.id.mapview);
        mMapView.setBuiltInZoomControls(true);
        
     // Получаем MapController
     MapController mMapController = mMapView.getController();
      
     // Перемещаем карту на заданные координаты
     mMapController.animateTo(new GeoPoint((int)60.113337, (int)55.151317));
      
     mMapController.setZoom(15);*/
        
        
//----------------------------------------------------------------------------------------------------------------------
        final MapView mapView = (MapView) findViewById(R.id.mapview);
     // Включаем элементы интерфейса, контролирующие зум
        mapView.setBuiltInZoomControls(true);
        MapController mapController = mapView.getController();
     // Получаем MapController
     // create an overlay that shows our current location
        ArrayList<GeoPoint> pnts = new ArrayList<GeoPoint>();
        pnts.add(new GeoPoint((int) (55.75219  * 1E6), (int) (37.60836  * 1E6)));// Александровский сад
        pnts.add(new GeoPoint((int) (55.80737  * 1E6), (int) (37.63844  * 1E6)));// Алексеевская
        pnts.add(new GeoPoint((int) (55.89504  * 1E6), (int) (37.58605  * 1E6)));// Алтуфьево
        pnts.add(new GeoPoint((int) (55.581818 * 1E6), (int) (37.594978 * 1E6)));// Аннино (стр.)
        pnts.add(new GeoPoint((int) (55.75228  * 1E6), (int) (37.60357  * 1E6)));// Арбатская
        pnts.add(new GeoPoint((int) (55.79981  * 1E6), (int) (37.53412  * 1E6)));// Аэропорт
        pnts.add(new GeoPoint((int) (55.86814  * 1E6), (int) (37.66292  * 1E6)));// Бабушкинская
        pnts.add(new GeoPoint((int) (55.74326  * 1E6), (int) (37.49753  * 1E6)));// Багратионовская
        pnts.add(new GeoPoint((int) (55.76027  * 1E6), (int) (37.58111  * 1E6)));// Баррикадная
        pnts.add(new GeoPoint((int) (55.77228  * 1E6), (int) (37.67857  * 1E6)));// Бауманская
        pnts.add(new GeoPoint((int) (55.77378  * 1E6), (int) (37.54412  * 1E6)));// Беговая
        pnts.add(new GeoPoint((int) (55.77492  * 1E6), (int) (37.58207  * 1E6)));// Белорусская
        pnts.add(new GeoPoint((int) (55.64371  * 1E6), (int) (37.52762  * 1E6)));// Беляево
        pnts.add(new GeoPoint((int) (55.88294  * 1E6), (int) (37.60523  * 1E6)));// Бибирево
        pnts.add(new GeoPoint((int) (55.75211  * 1E6), (int) (37.60988  * 1E6)));// Библиотека им. Ленина
        pnts.add(new GeoPoint((int) (55.60029  * 1E6), (int) (37.55735  * 1E6)));// Битцевский парк
        pnts.add(new GeoPoint((int) (55.75034  * 1E6), (int) (37.60857  * 1E6)));// Боровицкая
        pnts.add(new GeoPoint((int) (55.84649  * 1E6), (int) (37.63914  * 1E6)));// Ботанический сад
        pnts.add(new GeoPoint((int) (55.631363 * 1E6), (int) (37.75174  * 1E6)));// Братеево (стр.)
        pnts.add(new GeoPoint((int) (55.66126  * 1E6), (int) (37.7509   * 1E6)));// Братиславская
        pnts.add(new GeoPoint((int) (55.567759 * 1E6), (int) (37.575724 * 1E6)));// Бульвар Дмитрия Донского (стр.)
        Iterator<GeoPoint> it=pnts.iterator();
        GeoPoint pnt = it.next();

        
        /*String locService = Context.LOCATION_SERVICE;
        LocationManager lm = (LocationManager) getSystemService(locService);
        double lat = 73.14;
        double lng = 0.51;
        float radius = 100f;
        long expiration = -1;

        Intent intent = new Intent(MY_ALERT);
        PendingIntent pIntent = PendingIntent.getBroadcast(this, -1, intent, 0);

		lm.addProximityAlert(lat, lng, radius, expiration, pIntent);*/


        
        //GeoPoint point = new GeoPoint((int) (55.75219 * 1E6),
		//		(int) (37.60836 * 1E6));
		mapController.animateTo(pnt);
		mapController.setZoom(16);
        



     

     /*
      * // Создаём менеджер местоположения и "слушателя"
     final LocationManager locationManager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);
     final LocationListener locationListener = new LocationListener() {
             
         @Override
         public void onStatusChanged(String provider, int status, Bundle extras) {}
                 
         @Override
         public void onProviderEnabled(String provider) {}
                 
         @Override
         public void onProviderDisabled(String provider) {}
                 
         @Override
         public void onLocationChanged(Location location) {}
     };
     locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, locationListener);

     // создаём overlay для отображения своей позиции
     cMyLocationOverlay = new MyLocationOverlay(this, cMapView);
     cMyLocationOverlay.disableCompass();
     cMyLocationOverlay.enableMyLocation();
     cMapView.getOverlays().add(cMyLocationOverlay);
      
     // зум
     cMapController.setZoomCurrent(15);

     // Получаем свои координаты (можно использовать LocationManager.NETWORK_PROVIDER, для иного способа определения позиции)
     Location location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);

     // Перемещаем карту на заданные координаты
     cMapController.animateTo(new GeoPoint((int) location.getLatitude() * 1000000, (int) location.getLongitude() * 1000000));*/
//----------------------------------------------------------------------------------------------------------------------        
        
        
        
        
        
        
        
    }
    
    @Override
    protected boolean isRouteDisplayed() {
        return false;
    }
}